{"version":3,"sources":["/webpack/bootstrap","../reports/echo-board.ts","../external \"os\""],"names":[],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA,iDAAwB;AAGxB,MAAM,UAAU,GAAG,KAAK;AAChB,gCAAU;AAElB,SAAgB,uBAAuB;IACrC,OAAY;QACV,SAAS,EAAE,MAAM;KAClB;AACH,CAAC;AAJD,0DAIC;AAED,2GAA2G;AAC3G,sFAAsF;AACtF,kGAAkG;AAClG,SAAgB,OAAO,CAAC,MAAM,EAAE,IAAS;IACvC,qCAAqC;IACrC,IAAI,MAAM,EAAE;QACV,OAAO,IAAI;KACZ;IACD,OAAO,IAAI;AACb,CAAC;AAND,0BAMC;AAED,SAAgB,cAAc,CAAC,OAAyB,EAAE,IAAS;IACjE,OAAO,CAAC,GAAG,CAAC,iBAAiB,OAAO,CAAC,MAAM,UAAU,CAAC;IAEtD,MAAM,KAAK,GAAa,EAAE;IAC1B,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC;IAE3B,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;IACd,KAAK,CAAC,IAAI,CAAC,eAAe,CAAC;IAC3B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACzC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;IACjB,OAAO;IAEP,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC;AAC3B,CAAC;AAbD,wCAaC;AAED,SAAgB,UAAU;IACxB,oBAAoB;IACpB,OAAO,EAAE;AACX,CAAC;AAHD,gCAGC;;;;;;;;ACzCD,+B","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t__webpack_require__.ab = __dirname + \"/\";\n\n \t// the startup function\n \tfunction startup() {\n \t\t// Load entry module and return exports\n \t\treturn __webpack_require__(70);\n \t};\n\n \t// run startup\n \treturn startup();\n","import * as os from 'os'\nimport {CrawlingTarget} from '../interfaces'\n\nconst reportType = 'any'\nexport {reportType}\n\nexport function getDefaultConfiguration(): any {\n  return <any>{\n    'add-age': 'days'\n  }\n}\n\n// processing the data does a js map on each items and adds data that the report rendering (generate) needs\n// we will dump the json data used to generate the reports next to the rendered report\n// e.g. this function should look at the transition times and added wip status of yellow, red etc.\nexport function process(config, data: any): any {\n  // TODO: process and add age in hours\n  if (config) {\n    return data\n  }\n  return data\n}\n\nexport function renderMarkdown(targets: CrawlingTarget[], data: any): string {\n  console.log(`rendering for ${targets.length} targets`)\n\n  const lines: string[] = []\n  lines.push(`## Echo data `)\n\n  lines.push('')\n  lines.push('```javascript')\n  lines.push(JSON.stringify(data, null, 2))\n  lines.push('```')\n  // TODO\n\n  return lines.join(os.EOL)\n}\n\nexport function renderHtml(): string {\n  // Not supported yet\n  return ''\n}\n","module.exports = require(\"os\");"],"sourceRoot":""}